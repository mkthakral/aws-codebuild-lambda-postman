{
	"info": {
		"_postman_id": "193f68ac-9ed7-459e-b8b6-81326b4e42b5",
		"name": "AWS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "YamlToJsonAPI",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Is valid response with json in body\", function () {\r",
							"    \r",
							"    // assert that the status code is 200\r",
							"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
							"     \r",
							"    // assert that the response has a valid JSON body\r",
							"    pm.response.to.be.withBody;\r",
							"     \r",
							"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
							"     \r",
							"    //make sure we have a valid json object\r",
							"    //pm.expect(pm.response.json()).to.be.an('object').but.not.an('object');\r",
							"    \r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Verifying Response Body\", () => {\r",
							"    var jsonData = JSON.parse(responseBody);   \r",
							"    pm.expect(jsonData[\"app_id\"]).to.eql('PU0123');\r",
							"    pm.expect(jsonData[\"meta-data\"].name).to.eql('Parts_APP');\r",
							"    pm.expect(jsonData[\"meta-data\"].owner).to.eql('Jane Doe');\r",
							"    pm.expect(jsonData[\"meta-data\"].department).to.eql('IT');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "app_id: PU0123\r\nmeta-data: \r\n  name: Parts_APP \r\n  owner: Jane Doe \r\n  department: IT",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{api-url}}/",
					"protocol": "https",
					"host": [
						"{{api-url}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		}
	]
}